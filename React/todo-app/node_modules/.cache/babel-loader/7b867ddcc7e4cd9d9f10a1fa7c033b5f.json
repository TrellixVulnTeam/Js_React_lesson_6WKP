{"ast":null,"code":"var _jsxFileName = \"/Users/misawayuukou/node_project/test/React/todo-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./styles.css\";\nimport { InputTodo } from './components/InputTodo';\nimport { IncompleteTodos } from './components/IncompleteTodos';\nimport { DoingTodos } from './components/DoingTodos';\nimport { CompleteTodos } from './components/CompleteTodos'; //Reactで状態が変化するものはStateで定義\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const [todoText, setTodoText] = useState('');\n  const [deadline, setDedline] = useState('');\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [doingTodos, setDoingTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n  const [deadlines, setDeadlines] = useState([]);\n\n  const onChangeTodoText = e => setTodoText(e.target.value);\n\n  const onChangeDeadline = e => setDedline(e.target.value); //現在日時stateで管理する？\n\n\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  const date = new Date().getDate();\n\n  const onClickAdd = () => {\n    if (todoText === '' || deadline === '') return;\n    const newTodos = [...incompleteTodos, todoText];\n    const newDeadline = [...deadlines, deadline];\n    setIncompleteTodos(newTodos);\n    setTodoText('');\n    setDeadlines(newDeadline);\n    setDedline('');\n  };\n\n  const onClickStart = index => {\n    const newIncompleteTodos = [...incompleteTodos];\n    const newDeadline = [...deadlines];\n    newIncompleteTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n    const newDoingTodos = [...doingTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setDoingTodos(newDoingTodos);\n  };\n\n  const onClickComplete = index => {\n    const newDoingTodos = [...doingTodos];\n    const newDeadline = [...deadlines];\n    newDoingTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n    const newCompleteTodos = [...completeTodos, doingTodos[index]];\n    setDoingTodos(newDoingTodos);\n    setCompleteTodos(newCompleteTodos);\n  };\n\n  const onClickDelete = index => {\n    const newTodos = [...incompleteTodos];\n    const newDeadline = [...deadlines];\n    newTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n    setIncompleteTodos(newTodos);\n    setDeadlines(newDeadline);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(InputTodo, {\n      todoText: todoText,\n      deadline: deadline,\n      onChangeTodoText: onChangeTodoText,\n      onChangeDeadline: onChangeDeadline,\n      onClick: onClickAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: \"\\u4E0A\\u9650\\u306B\\u9054\\u3057\\u307E\\u3057\\u305F\\u3002\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IncompleteTodos, {\n      todos: incompleteTodos,\n      deadlines: deadlines,\n      onClickStart: onClickStart,\n      onClickDelete: onClickDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoingTodos, {\n      todos: doingTodos,\n      deadlines: deadlines,\n      onClickComplete: onClickComplete,\n      onClickDelete: onClickDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CompleteTodos, {\n      todos: completeTodos,\n      year: year,\n      month: month,\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"yoHddSc62DOEPb/zATPEQG9TzIo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/misawayuukou/node_project/test/React/todo-app/src/App.jsx"],"names":["React","useState","InputTodo","IncompleteTodos","DoingTodos","CompleteTodos","App","todoText","setTodoText","deadline","setDedline","incompleteTodos","setIncompleteTodos","doingTodos","setDoingTodos","completeTodos","setCompleteTodos","deadlines","setDeadlines","onChangeTodoText","e","target","value","onChangeDeadline","year","Date","getFullYear","month","getMonth","date","getDate","onClickAdd","newTodos","newDeadline","onClickStart","index","newIncompleteTodos","splice","newDoingTodos","onClickComplete","newCompleteTodos","onClickDelete","color"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"./styles.css\";\nimport { InputTodo } from './components/InputTodo';\nimport { IncompleteTodos } from './components/IncompleteTodos';\nimport { DoingTodos } from './components/DoingTodos';\nimport { CompleteTodos } from './components/CompleteTodos';\n\n//Reactで状態が変化するものはStateで定義\n\nexport const App = () => {\n  const [todoText, setTodoText] = useState('');\n  const [deadline, setDedline] = useState('')\n  const [incompleteTodos, setIncompleteTodos] = useState([]);\n  const [doingTodos, setDoingTodos] = useState([]);\n  const [completeTodos, setCompleteTodos] = useState([]);\n  const [deadlines, setDeadlines] = useState([]);\n  const onChangeTodoText = (e) => setTodoText(e.target.value);\n  const onChangeDeadline = (e) => setDedline(e.target.value);\n  //現在日時stateで管理する？\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth()+1;\n  const date = new Date().getDate();\n   \n  const onClickAdd = () => {\n    if (todoText === '' || deadline === '') return;\n    const newTodos = [...incompleteTodos, todoText];\n    const newDeadline = [...deadlines, deadline];\n    setIncompleteTodos(newTodos);\n    setTodoText('');\n    setDeadlines(newDeadline);\n    setDedline('');\n  }\n\n  const onClickStart = (index) => {\n    const newIncompleteTodos = [...incompleteTodos];\n    const newDeadline = [...deadlines];\n    newIncompleteTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n\n    const newDoingTodos = [...doingTodos, incompleteTodos[index]];\n    setIncompleteTodos(newIncompleteTodos);\n    setDoingTodos(newDoingTodos);\n  }\n  const onClickComplete = (index) => {\n    const newDoingTodos = [...doingTodos];\n    const newDeadline = [...deadlines];\n    newDoingTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n\n    const newCompleteTodos = [...completeTodos, doingTodos[index]];\n    setDoingTodos(newDoingTodos);\n    setCompleteTodos(newCompleteTodos);\n  }\n\n  const onClickDelete = (index) => {\n    const newTodos = [...incompleteTodos];\n    const newDeadline = [...deadlines];\n    newTodos.splice(index, 1);\n    newDeadline.splice(index, 1);\n    setIncompleteTodos(newTodos);\n    setDeadlines(newDeadline);\n  }\n\n  \n  \n      \n\n\n  return (\n    <>\n      <InputTodo todoText={todoText} deadline={deadline} onChangeTodoText={onChangeTodoText} onChangeDeadline={onChangeDeadline} onClick={onClickAdd}/>\n      <p style={{color: 'red'}}>上限に達しました。</p>\n      <IncompleteTodos todos={incompleteTodos} deadlines={deadlines} onClickStart={onClickStart} onClickDelete={onClickDelete} />\n      <DoingTodos todos={doingTodos} deadlines={deadlines} onClickComplete={onClickComplete} onClickDelete={onClickDelete} />\n      <CompleteTodos todos={completeTodos} year={year} month={month} date={date} />\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}