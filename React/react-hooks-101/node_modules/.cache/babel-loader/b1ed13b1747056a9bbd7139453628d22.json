{"ast":null,"code":"var _jsxFileName = \"/Users/misawayuukou/node_project/test/React/react-hooks-101/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = props => {\n  _s();\n\n  const [state, setState] = useState(props);\n  const {\n    name,\n    price\n  } = state;\n  useEffect(() => {\n    console.log('useEffect is invoked');\n  });\n\n  const renderPeriod = () => {\n    console.log(`renderPeriod renders period`);\n    return '。';\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\", name, \"\\u306F\\u3001\", price, \"\\u5186\\u3067\\u3059\", renderPeriod]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setState({ ...state,\n        price: price + 1\n      }),\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setState({ ...state,\n        price: price - 1\n      }),\n      children: \"-1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setState(props),\n      children: \"Reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: name,\n      onChange: e => setState({ ...state,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"hL+Lzgdf17H/aDiQeoEeL8NI+yk=\");\n\n_c = App;\nApp.defaultProps = {\n  name: '',\n  price: 1000\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/misawayuukou/node_project/test/React/react-hooks-101/src/App.js"],"names":["React","useEffect","useState","App","props","state","setState","name","price","console","log","renderPeriod","e","target","value","defaultProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;;AAEA,OAAO,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA;;AAG5B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAACE,KAAD,CAAlC;AACA,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAgBH,KAAtB;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD,GAFQ,CAAT;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBF,IAAAA,OAAO,CAACC,GAAR,CAAa,6BAAb;AACA,WAAO,GAAP;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA,uCAAOH,IAAP,kBAAeC,KAAf,wBAAyBG,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAML,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWG,QAAAA,KAAK,EAAEA,KAAK,GAAG;AAA1B,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,MAAMF,QAAQ,CAACF,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAO,MAAA,KAAK,EAAEG,IAAd;AAAoB,MAAA,QAAQ,EAAEK,CAAC,IAAIN,QAAQ,CAAC,EAAC,GAAGD,KAAJ;AAAWE,QAAAA,IAAI,EAAEK,CAAC,CAACC,MAAF,CAASC;AAA1B,OAAD;AAA3C;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AASD,CAxBM;;GAAMX,G;;KAAAA,G;AA0BbA,GAAG,CAACY,YAAJ,GAAmB;AACjBR,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAAnB","sourcesContent":["import React, { useEffect, useState} from \"react\";\n\nexport const App = (props) => {\n  \n\n  const [state, setState] = useState(props);\n  const {name, price} = state\n\n  useEffect(() => {\n    console.log('useEffect is invoked')\n  })\n\n  const renderPeriod = () => {\n    console.log(`renderPeriod renders period`)\n    return '。'\n  }\n \n  return (\n    <>\n      <p>現在の{name}は、{price}円です{renderPeriod}</p>\n      <button onClick={() => setState({...state, price: price + 1})}>+1</button>\n      <button onClick={() => setState({...state, price: price - 1})}>-1</button>\n      <button onClick={() => setState(props)}>Reset</button>\n      <input value={name} onChange={e => setState({...state, name: e.target.value})} />\n    </>\n  )\n}\n\nApp.defaultProps = {\n  name: '',\n  price: 1000,\n}"]},"metadata":{},"sourceType":"module"}