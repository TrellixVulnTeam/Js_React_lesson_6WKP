{"ast":null,"code":"var _jsxFileName = \"/Users/misawayuukou/node_project/test/React/React_Hooks/use-reducer-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'increment':\n      return {\n        count: state.count + 1\n      };\n\n    case 'decrement':\n      return {\n        count: state.count - 1\n      };\n  }\n}\n\nexport const App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"Count: \", state.count, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        tyoe: 'decrement'\n      }),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        tyoe: 'increment'\n      }),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/misawayuukou/node_project/test/React/React_Hooks/use-reducer-app/src/App.jsx"],"names":["React","useReducer","initialState","count","reducer","state","action","type","App","dispatch","tyoe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,KAAK,EAAE;AAAR,CAArB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAACJ,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAtB,OAAP;;AACF,SAAK,WAAL;AACE,aAAO;AAACA,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAtB,OAAP;AAJJ;AAMD;;AAED,OAAO,MAAMK,GAAG,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBR,UAAU,CAACG,OAAD,EAAUF,YAAV,CAApC;AACA,sBACI;AAAA,0BACUG,KAAK,CAACF,KADhB,eAEE;AAAQ,MAAA,OAAO,EAAE,MAAMM,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,MAAMD,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE;AAAP,OAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADJ;AAOC,CATM;;GAAMF,G;;KAAAA,G","sourcesContent":["import React, { useReducer } from 'react';\n\nconst initialState = {count: 0};\n\nfunction reducer(state, action) {\n  switch (action.type){\n    case 'increment':\n      return {count: state.count + 1}\n    case 'decrement':\n      return {count: state.count - 1}\n  }\n}\n\nexport const App = () => {\nconst [state, dispatch] = useReducer(reducer, initialState);\nreturn(\n    <>\n      Count: {state.count}\n      <button onClick={() => dispatch({tyoe: 'decrement'})}>-</button>\n      <button onClick={() => dispatch({tyoe: 'increment'})}>+</button>\n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}