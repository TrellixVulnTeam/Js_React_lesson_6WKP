{"ast":null,"code":"var _jsxFileName = \"/Users/misawayuukou/node_project/test/React/React_Hooks/use-ref-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n\n  const count = useRef(0);\n  const addCount = useCallback(() => {\n    count.current += 1;\n  }, []);\n  const showLog = useCallback(() => {\n    console.log(count.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addCount,\n      children: \"add count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showLog,\n      children: \"show log\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"QLt+k+OK5wG6YxPaLd9xwM3uJUU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/misawayuukou/node_project/test/React/React_Hooks/use-ref-app/src/App.js"],"names":["React","useRef","useState","useCallback","App","count","addCount","current","showLog","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,WAAlC,QAAqD,OAArD;;;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAMC,KAAK,GAAGJ,MAAM,CAAC,CAAD,CAApB;AAEA,QAAMK,QAAQ,GAAGH,WAAW,CAAC,MAAI;AAC/BE,IAAAA,KAAK,CAACE,OAAN,IAAiB,CAAjB;AACD,GAF2B,EAE1B,EAF0B,CAA5B;AAIA,QAAMC,OAAO,GAAGL,WAAW,CAAC,MAAI;AAC9BM,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,OAAlB;AACD,GAF0B,EAEzB,EAFyB,CAA3B;AAIA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAED,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,OAAO,EAAEE,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD,CAjBM;;GAAMJ,G;;KAAAA,G;AAmBb,eAAeA,GAAf","sourcesContent":["import React, { useRef, useState, useCallback } from \"react\";\n\nexport const App = () => {\n  const count = useRef(0);\n\n  const addCount = useCallback(()=>{\n    count.current += 1\n  },[])\n\n  const showLog = useCallback(()=>{\n    console.log(count.current)\n  },[])\n\n  return (\n    <>\n      <button onClick={addCount}>add count</button>\n      <button onClick={showLog}>show log</button>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}